program id {


<<<<<<< Updated upstream
  function int fibonacci(int a){
=======
  function int fibonacciRecursivo(int a){
>>>>>>> Stashed changes
     int answer = 0;
     if (a == 0){
       answer = 0;
     }
  
     elseif(a == 1){
       answer = 1;
     }
     else{
       answer = fibonacciRecursivo(a - 1) + fibonacciRecursivo(a - 2);
     }
  
     return answer;
  
  }
  

  function int fibonacciIterativo(int a){
     int x = 0, y = 1, z = 1, i = 0;
  
     while(i < a){
       x = y;
       y = z;
       z = x + y;
       i = i + 1;
      }
   
     return x;
  }

<<<<<<< Updated upstream
     }
  
<<<<<<< HEAD
=======
<<<<<<< Updated upstream
=======
>>>>>>> 9aecc9601ffa4f5848aa5716d9cbfa2b725a6c1e
  function int fibonacci (int n){
=======

  function int fibonacci3(int n){
>>>>>>> Stashed changes
    int x=0;
    int y=1;
    int z=1;
    int i=0;
<<<<<<< Updated upstream
    while (i < n) {
=======
      while (i < n) {
>>>>>>> Stashed changes
      x=y;
      y=z;
      z=x + y;
      i=i + 1;
<<<<<<< HEAD

=======
<<<<<<< Updated upstream
>>>>>>> Stashed changes
=======

      }
>>>>>>> Stashed changes
>>>>>>> 9aecc9601ffa4f5848aa5716d9cbfa2b725a6c1e
=======

  function int factorialRecursive(int n) {
    int answer = 0;

    if(n <= 1){
      answer = 1;
    }
    else{
      answer = n * factorialRecursive(n - 1);
    }

    
    return answer;
  }

  function int factorialIterativo(int n){
    
    int result = 1;
    int i = 1;
    while(i < n){
      i = i + 1;
      result = i * result;
>>>>>>> Stashed changes
    }
    
    return result;
  }












  priomh {
<<<<<<< Updated upstream
<<<<<<< HEAD

=======
<<<<<<< Updated upstream
<<<<<<< Updated upstream
>>>>>>> 9aecc9601ffa4f5848aa5716d9cbfa2b725a6c1e
    int x = 20;
    x = fibonacci(x);
    print("fibonacci recursivo");

    int a[10] = [2, 3, 5, 9, 1, 4, 0, 6, 8, 7];
=======

    int c = 20;
    c = fibonacci(c);
    print("fibonacci recursivo");

    int a[10] = [2, 3, 5, 9, 1, 4, 0, 6, 8, 7];
    print(a[1]);
>>>>>>> Stashed changes
    int x=1,i=1,j=0,temp=0,size=10,n=0;
    print("Read N");
    read (n);
    print("-----------------------");
    print("Iterative Fibonacci");
    x=fibonacci(n);
<<<<<<< HEAD

=======
<<<<<<< Updated upstream
>>>>>>> Stashed changes
=======

>>>>>>> Stashed changes
>>>>>>> 9aecc9601ffa4f5848aa5716d9cbfa2b725a6c1e
=======


    int a = 0;

    print("Input the fibonacci value: ");
    read(a);  

    print("-------------------");
    print("Fibonacci Recursive");
    int x = fibonacciRecursivo(a);
>>>>>>> Stashed changes
    print(x);

    print("-------------------");
    print("Fibonacci Iterative");
    x = fibonacciIterativo(a);
    print(x);

    print("-------------------");
    print("-------------------");
    print("Input the factorial value: ");
    read(a);  

    print("-------------------");
    print("-------------------");
    print("Factorial Recursive");
    x = factorialRecursive(a);
    print(x);


    print("-------------------");
    print("Factorial Iterative");
    x = factorialIterativo(a);
    print(x);



    int arr[7] = [4, 2, 10, 35, 1, 0, 7];

    int i = 0, j = 0, h = 0;

    print("-------------------");
    print("Array print withouth sorting");

    print(arr[0]);
    print(arr[1]);
    print(arr[2]);
    print(arr[3]);
    print(arr[4]);
    print(arr[5]);
    print(arr[6]);
    
   

    print("--------------------");
    int arrSize = 7;
    while (i < arrSize) {
    

      while (arrSize - 1 > j) {

        if (arr[j] > arr[j+1]) {

          h = arr[j];
          arr[j] = arr[j+1];
          arr[j+1] = h;
        }

        j = j + 1;
      }

      i = i + 1;
      j = 0;
    }

    print("-------------------");
    print("Array print with sorting");

    print(arr[0]);
    print(arr[1]);
    print(arr[2]);
    print(arr[3]);
    print(arr[4]);
    print(arr[5]);
    print(arr[6]);
    
   
    print("-------------------");
    print("-------------------");
    print("What value do you want me to tell you the position on the array?");
    read(a); 

    print("-------------------");
    int first = 0, last = 6;
    while(first <= last){
        if(arr[first] == a){
          print("We found your number in the array on the position: ");
          print(first);
          first = last + 1;
        }
        else{
        
          first = first + 1;
          if(first > 7){
            print("Im sorry we did not find your number!");
          }
        }
    }
    

  
  
  
    

  }

}