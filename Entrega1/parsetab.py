
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'LFTBRAC RGTBRAC LFTPAREN RGTPAREN LFTBRACSQR RGTBRACSQR AND DOUBEQUAL NOT OR SEMICOLON EQUAL LESSTHANEQUAL GREATTHANEQUAL GREATTHAN LESSTHAN PLUS MINUS MULTIPLICATION DIVISION INT FLOAT STRING ID COMMA FUNCTION CHAR INT FALSE STRING READ VOID FLOAT PRIOMH WRITE PRINT WHILE PROGRAM BOOL ELSEIF RETURN ARRAY ELSE TRUE IFprogram : PROGRAM ID LFTBRAC auxprogram main RGTBRACauxprogram : vars auxprogram \n    | function auxprogram \n    | emptyarray : ID LFTBRACSQR exp RGTBRACSQRassignment : assignmentaux EQUAL expression SEMICOLON \n    | assignmentaux EQUAL call SEMICOLONassignmentaux : ID \n    | arrayblockreturn : LFTBRAC blockreturnaux RGTBRAC \n    | LFTBRAC blockreturnaux RETURN exp SEMICOLON RGTBRAC blockreturnaux : statement blockreturnaux \n    | empty block : LFTBRAC blockaux RGTBRACblockaux : statement blockaux \n    | empty condition : IF conditionaux \n    | IF conditionaux ELSE block conditionaux : LFTPAREN expression RGTPAREN block ELSEIF conditionaux \n    | LFTPAREN expression RGTPAREN block constant : ID \n    | array \n    | TRUE \n    | FALSE exp : term \n    | term expaux  expaux : PLUS exp expaux \n    | MINUS exp expaux \n    | empty factor : factoraux constant \n    | LFTPAREN expression RGTPAREN factoraux : PLUS \n    | MINUS expression : exp \n    | expressionaux exp expressionaux : AND \n    | DOUBEQUAL \n    | NOT \n    | OR \n    | LESSTHANEQUAL \n    | GREATTHANEQUAL \n    | GREATTHAN \n    | LESSTHAN loop : WHILE LFTPAREN expression RGTPAREN block write : PRINT LFTPAREN exp RGTPAREN SEMICOLON parameter : type ID \n    | type ID COMMA parameter \n    | empty  term : factor termaux  termaux : MULTIPLICATION term termaux \n    | DIVISION term termaux \n    | empty  statement : assignment \n    | condition \n    | vars \n    | loop \n    | write \n    | read \n    | call  type : INT \n    | FLOAT \n    | CHAR \n    | BOOL \n    | STRING  main : PRIOMH block  function : FUNCTION functionaux ID LFTPAREN functionaux2 RGTPAREN blockreturn  functionaux : VOID \n    | type  functionaux2 : parameter \n    | empty  vars : type varsaux2 SEMICOLON    varsaux : PLUS \n    | MINUS \n    | empty   varsaux2 : ID EQUAL varsaux constant \n    | ID EQUAL varsaux constant COMMA varsaux2  call : ID LFTPAREN exp RGTPAREN SEMICOLON \n    | ID LFTPAREN exp COMMA call RGTPAREN SEMICOLON  read : READ LFTPAREN ID RGTPAREN SEMICOLON empty :'
    
_lr_action_items = {'RGTPAREN':([31,54,55,56,68,69,70,71,72,74,81,86,88,90,92,96,98,101,105,108,109,110,111,112,115,122,126,127,132,133,134,135,136,139,140,145,146,147,148,152,],[-80,73,-69,-48,-24,-22,-23,-21,-46,104,-80,-25,-34,116,117,120,123,-80,-30,-49,-52,-35,134,-26,-29,-5,-47,-48,-80,-80,-31,-80,-80,-77,149,-51,-50,-27,-28,-78,]),'RETURN':([29,32,37,38,39,43,46,48,61,66,102,118,119,124,128,129,130,131,137,138,139,141,142,152,153,],[-71,-55,-57,-58,-59,-53,-54,-56,-14,-17,-80,-7,-6,-18,-80,143,-13,-79,-44,-45,-77,-20,-12,-78,-19,]),'READ':([26,29,32,37,38,39,40,43,46,48,61,66,102,118,119,124,128,131,137,138,139,141,152,153,],[33,-71,-55,-57,-58,-59,33,-53,-54,-56,-14,-17,33,-7,-6,-18,33,-79,-44,-45,-77,-20,-78,-19,]),'VOID':([5,],[16,]),'EQUAL':([23,36,44,45,122,],[30,-9,62,-8,-5,]),'CHAR':([4,5,6,11,26,29,31,32,37,38,39,40,43,46,48,61,66,101,102,103,118,119,124,128,131,137,138,139,141,144,152,153,155,],[7,7,7,7,7,-71,7,-55,-57,-58,-59,7,-53,-54,-56,-14,-17,7,7,-66,-7,-6,-18,7,-79,-44,-45,-77,-20,-10,-78,-19,-11,]),'MULTIPLICATION':([68,69,70,71,81,105,108,109,122,132,133,134,145,146,],[-24,-22,-23,-21,107,-30,-49,-52,-5,107,107,-31,-51,-50,]),'WHILE':([26,29,32,37,38,39,40,43,46,48,61,66,102,118,119,124,128,131,137,138,139,141,152,153,],[34,-71,-55,-57,-58,-59,34,-53,-54,-56,-14,-17,34,-7,-6,-18,34,-79,-44,-45,-77,-20,-78,-19,]),'PROGRAM':([0,],[2,]),'PRINT':([26,29,32,37,38,39,40,43,46,48,61,66,102,118,119,124,128,131,137,138,139,141,152,153,],[35,-71,-55,-57,-58,-59,35,-53,-54,-56,-14,-17,35,-7,-6,-18,35,-79,-44,-45,-77,-20,-78,-19,]),'RGTBRACSQR':([68,69,70,71,81,86,97,105,108,109,112,115,122,132,133,134,135,136,145,146,147,148,],[-24,-22,-23,-21,-80,-25,122,-30,-49,-52,-26,-29,-5,-80,-80,-31,-80,-80,-51,-50,-27,-28,]),'TRUE':([30,49,50,51,52,76,77,80,],[-80,-73,-72,-74,70,70,-33,-32,]),'MINUS':([30,58,59,62,63,64,65,68,69,70,71,75,78,79,81,82,83,84,85,86,87,89,91,105,106,107,108,109,112,113,114,115,122,132,133,134,135,136,143,145,146,147,148,],[49,77,77,77,77,77,77,-24,-22,-23,-21,-43,-42,-40,-80,77,77,-37,-36,114,-41,-38,-39,-30,77,77,-49,-52,-26,77,77,-29,-5,-80,-80,-31,114,114,77,-51,-50,-27,-28,]),'SEMICOLON':([22,67,68,69,70,71,81,86,88,93,95,104,105,108,109,110,112,115,117,120,122,125,132,133,134,135,136,139,145,146,147,148,149,151,152,],[29,-75,-24,-22,-23,-21,-80,-25,-34,118,119,131,-30,-49,-52,-35,-26,-29,138,139,-5,-76,-80,-80,-31,-80,-80,-77,-51,-50,-27,-28,152,154,-78,]),'GREATTHAN':([58,62,65,83,],[78,78,78,78,]),'LESSTHANEQUAL':([58,62,65,83,],[79,79,79,79,]),'LFTBRACSQR':([45,71,],[64,64,]),'PLUS':([30,58,59,62,63,64,65,68,69,70,71,75,78,79,81,82,83,84,85,86,87,89,91,105,106,107,108,109,112,113,114,115,122,132,133,134,135,136,143,145,146,147,148,],[50,80,80,80,80,80,80,-24,-22,-23,-21,-43,-42,-40,-80,80,80,-37,-36,113,-41,-38,-39,-30,80,80,-49,-52,-26,80,80,-29,-5,-80,-80,-31,113,113,80,-51,-50,-27,-28,]),'COMMA':([67,68,69,70,71,72,81,86,96,105,108,109,112,115,122,132,133,134,135,136,145,146,147,148,],[100,-24,-22,-23,-21,101,-80,-25,121,-30,-49,-52,-26,-29,-5,-80,-80,-31,-80,-80,-51,-50,-27,-28,]),'$end':([1,28,],[0,-1,]),'FUNCTION':([4,6,11,29,103,144,155,],[5,5,5,-71,-66,-10,-11,]),'DIVISION':([68,69,70,71,81,105,108,109,122,132,133,134,145,146,],[-24,-22,-23,-21,106,-30,-49,-52,-5,106,106,-31,-51,-50,]),'STRING':([4,5,6,11,26,29,31,32,37,38,39,40,43,46,48,61,66,101,102,103,118,119,124,128,131,137,138,139,141,144,152,153,155,],[12,12,12,12,12,-71,12,-55,-57,-58,-59,12,-53,-54,-56,-14,-17,12,12,-66,-7,-6,-18,12,-79,-44,-45,-77,-20,-10,-78,-19,-11,]),'RGTBRAC':([21,26,27,29,32,37,38,39,40,41,42,43,46,48,60,61,66,102,118,119,124,128,129,130,131,137,138,139,141,142,152,153,154,],[28,-80,-65,-71,-55,-57,-58,-59,-80,-16,61,-53,-54,-56,-15,-14,-17,-80,-7,-6,-18,-80,144,-13,-79,-44,-45,-77,-20,-12,-78,-19,155,]),'LFTPAREN':([25,33,34,35,45,47,58,59,62,63,64,65,75,78,79,82,83,84,85,87,89,91,94,106,107,113,114,143,150,],[31,57,58,59,63,65,83,83,83,83,83,83,-43,-42,-40,83,83,-37,-36,-41,-38,-39,63,83,83,83,83,83,65,]),'ELSE':([61,66,141,153,],[-14,99,-20,-19,]),'ELSEIF':([61,141,],[-14,150,]),'GREATTHANEQUAL':([58,62,65,83,],[87,87,87,87,]),'DOUBEQUAL':([58,62,65,83,],[84,84,84,84,]),'ID':([2,7,9,12,13,14,15,16,17,18,26,29,30,32,37,38,39,40,43,46,48,49,50,51,52,53,57,61,62,66,76,77,80,100,102,118,119,121,124,128,131,137,138,139,141,152,153,],[3,-62,23,-64,-60,-61,-63,-67,25,-68,45,-71,-80,-55,-57,-58,-59,45,-53,-54,-56,-73,-72,-74,71,72,74,-14,94,-17,71,-33,-32,23,45,-7,-6,94,-18,45,-79,-44,-45,-77,-20,-78,-19,]),'IF':([26,29,32,37,38,39,40,43,46,48,61,66,102,118,119,124,128,131,137,138,139,141,152,153,],[47,-71,-55,-57,-58,-59,47,-53,-54,-56,-14,-17,47,-7,-6,-18,47,-79,-44,-45,-77,-20,-78,-19,]),'AND':([58,62,65,83,],[85,85,85,85,]),'FALSE':([30,49,50,51,52,76,77,80,],[-80,-73,-72,-74,68,68,-33,-32,]),'LFTBRAC':([3,20,73,99,116,123,],[4,26,102,26,26,26,]),'INT':([4,5,6,11,26,29,31,32,37,38,39,40,43,46,48,61,66,101,102,103,118,119,124,128,131,137,138,139,141,144,152,153,155,],[13,13,13,13,13,-71,13,-55,-57,-58,-59,13,-53,-54,-56,-14,-17,13,13,-66,-7,-6,-18,13,-79,-44,-45,-77,-20,-10,-78,-19,-11,]),'FLOAT':([4,5,6,11,26,29,31,32,37,38,39,40,43,46,48,61,66,101,102,103,118,119,124,128,131,137,138,139,141,144,152,153,155,],[14,14,14,14,14,-71,14,-55,-57,-58,-59,14,-53,-54,-56,-14,-17,14,14,-66,-7,-6,-18,14,-79,-44,-45,-77,-20,-10,-78,-19,-11,]),'LESSTHAN':([58,62,65,83,],[75,75,75,75,]),'PRIOMH':([4,6,8,10,11,19,24,29,103,144,155,],[-80,-80,20,-4,-80,-2,-3,-71,-66,-10,-11,]),'BOOL':([4,5,6,11,26,29,31,32,37,38,39,40,43,46,48,61,66,101,102,103,118,119,124,128,131,137,138,139,141,144,152,153,155,],[15,15,15,15,15,-71,15,-55,-57,-58,-59,15,-53,-54,-56,-14,-17,15,15,-66,-7,-6,-18,15,-79,-44,-45,-77,-20,-10,-78,-19,-11,]),'NOT':([58,62,65,83,],[89,89,89,89,]),'OR':([58,62,65,83,],[91,91,91,91,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'constant':([52,76,],[67,105,]),'vars':([4,6,11,26,40,102,128,],[6,6,6,32,32,32,32,]),'expaux':([86,135,136,],[112,147,148,]),'factoraux':([58,59,62,63,64,65,82,83,106,107,113,114,143,],[76,76,76,76,76,76,76,76,76,76,76,76,76,]),'array':([26,40,52,76,102,128,],[36,36,69,69,36,36,]),'termaux':([81,132,133,],[108,145,146,]),'auxprogram':([4,6,11,],[8,19,24,]),'functionaux':([5,],[17,]),'write':([26,40,102,128,],[37,37,37,37,]),'program':([0,],[1,]),'call':([26,40,62,102,121,128,],[39,39,93,39,140,39,]),'statement':([26,40,102,128,],[40,40,128,128,]),'factor':([58,59,62,63,64,65,82,83,106,107,113,114,143,],[81,81,81,81,81,81,81,81,81,81,81,81,81,]),'main':([8,],[21,]),'type':([4,5,6,11,26,31,40,101,102,128,],[9,18,9,9,9,53,9,53,9,9,]),'empty':([4,6,11,26,30,31,40,81,86,101,102,128,132,133,135,136,],[10,10,10,41,51,56,41,109,115,127,130,130,109,109,115,115,]),'blockaux':([26,40,],[42,60,]),'function':([4,6,11,],[11,11,11,]),'expressionaux':([58,62,65,83,],[82,82,82,82,]),'read':([26,40,102,128,],[38,38,38,38,]),'assignment':([26,40,102,128,],[43,43,43,43,]),'blockreturnaux':([102,128,],[129,142,]),'assignmentaux':([26,40,102,128,],[44,44,44,44,]),'functionaux2':([31,],[54,]),'condition':([26,40,102,128,],[46,46,46,46,]),'term':([58,59,62,63,64,65,82,83,106,107,113,114,143,],[86,86,86,86,86,86,86,86,132,133,86,86,86,]),'parameter':([31,101,],[55,126,]),'varsaux2':([9,100,],[22,125,]),'blockreturn':([73,],[103,]),'block':([20,99,116,123,],[27,124,137,141,]),'exp':([58,59,62,63,64,65,82,83,113,114,143,],[88,92,88,96,97,88,110,88,135,136,151,]),'conditionaux':([47,150,],[66,153,]),'expression':([58,62,65,83,],[90,95,98,111,]),'loop':([26,40,102,128,],[48,48,48,48,]),'varsaux':([30,],[52,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID LFTBRAC auxprogram main RGTBRAC','program',6,'p_program','Yaotecatl.py',88),
  ('auxprogram -> vars auxprogram','auxprogram',2,'p_auxprogram','Yaotecatl.py',90),
  ('auxprogram -> function auxprogram','auxprogram',2,'p_auxprogram','Yaotecatl.py',91),
  ('auxprogram -> empty','auxprogram',1,'p_auxprogram','Yaotecatl.py',92),
  ('array -> ID LFTBRACSQR exp RGTBRACSQR','array',4,'p_array','Yaotecatl.py',95),
  ('assignment -> assignmentaux EQUAL expression SEMICOLON','assignment',4,'p_assignment','Yaotecatl.py',98),
  ('assignment -> assignmentaux EQUAL call SEMICOLON','assignment',4,'p_assignment','Yaotecatl.py',99),
  ('assignmentaux -> ID','assignmentaux',1,'p_assignmentaux','Yaotecatl.py',101),
  ('assignmentaux -> array','assignmentaux',1,'p_assignmentaux','Yaotecatl.py',102),
  ('blockreturn -> LFTBRAC blockreturnaux RGTBRAC','blockreturn',3,'p_blockreturn','Yaotecatl.py',105),
  ('blockreturn -> LFTBRAC blockreturnaux RETURN exp SEMICOLON RGTBRAC','blockreturn',6,'p_blockreturn','Yaotecatl.py',106),
  ('blockreturnaux -> statement blockreturnaux','blockreturnaux',2,'p_blockreturnaux','Yaotecatl.py',108),
  ('blockreturnaux -> empty','blockreturnaux',1,'p_blockreturnaux','Yaotecatl.py',109),
  ('block -> LFTBRAC blockaux RGTBRAC','block',3,'p_block','Yaotecatl.py',112),
  ('blockaux -> statement blockaux','blockaux',2,'p_blockaux','Yaotecatl.py',114),
  ('blockaux -> empty','blockaux',1,'p_blockaux','Yaotecatl.py',115),
  ('condition -> IF conditionaux','condition',2,'p_condition','Yaotecatl.py',118),
  ('condition -> IF conditionaux ELSE block','condition',4,'p_condition','Yaotecatl.py',119),
  ('conditionaux -> LFTPAREN expression RGTPAREN block ELSEIF conditionaux','conditionaux',6,'p_conditionaux','Yaotecatl.py',121),
  ('conditionaux -> LFTPAREN expression RGTPAREN block','conditionaux',4,'p_conditionaux','Yaotecatl.py',122),
  ('constant -> ID','constant',1,'p_constant','Yaotecatl.py',125),
  ('constant -> array','constant',1,'p_constant','Yaotecatl.py',126),
  ('constant -> TRUE','constant',1,'p_constant','Yaotecatl.py',127),
  ('constant -> FALSE','constant',1,'p_constant','Yaotecatl.py',128),
  ('exp -> term','exp',1,'p_exp','Yaotecatl.py',131),
  ('exp -> term expaux','exp',2,'p_exp','Yaotecatl.py',132),
  ('expaux -> PLUS exp expaux','expaux',3,'p_expaux','Yaotecatl.py',134),
  ('expaux -> MINUS exp expaux','expaux',3,'p_expaux','Yaotecatl.py',135),
  ('expaux -> empty','expaux',1,'p_expaux','Yaotecatl.py',136),
  ('factor -> factoraux constant','factor',2,'p_factor','Yaotecatl.py',139),
  ('factor -> LFTPAREN expression RGTPAREN','factor',3,'p_factor','Yaotecatl.py',140),
  ('factoraux -> PLUS','factoraux',1,'p_factoraux','Yaotecatl.py',142),
  ('factoraux -> MINUS','factoraux',1,'p_factoraux','Yaotecatl.py',143),
  ('expression -> exp','expression',1,'p_expression','Yaotecatl.py',146),
  ('expression -> expressionaux exp','expression',2,'p_expression','Yaotecatl.py',147),
  ('expressionaux -> AND','expressionaux',1,'p_expressionaux','Yaotecatl.py',149),
  ('expressionaux -> DOUBEQUAL','expressionaux',1,'p_expressionaux','Yaotecatl.py',150),
  ('expressionaux -> NOT','expressionaux',1,'p_expressionaux','Yaotecatl.py',151),
  ('expressionaux -> OR','expressionaux',1,'p_expressionaux','Yaotecatl.py',152),
  ('expressionaux -> LESSTHANEQUAL','expressionaux',1,'p_expressionaux','Yaotecatl.py',153),
  ('expressionaux -> GREATTHANEQUAL','expressionaux',1,'p_expressionaux','Yaotecatl.py',154),
  ('expressionaux -> GREATTHAN','expressionaux',1,'p_expressionaux','Yaotecatl.py',155),
  ('expressionaux -> LESSTHAN','expressionaux',1,'p_expressionaux','Yaotecatl.py',156),
  ('loop -> WHILE LFTPAREN expression RGTPAREN block','loop',5,'p_loop','Yaotecatl.py',159),
  ('write -> PRINT LFTPAREN exp RGTPAREN SEMICOLON','write',5,'p_write','Yaotecatl.py',162),
  ('parameter -> type ID','parameter',2,'p_parameter','Yaotecatl.py',165),
  ('parameter -> type ID COMMA parameter','parameter',4,'p_parameter','Yaotecatl.py',166),
  ('parameter -> empty','parameter',1,'p_parameter','Yaotecatl.py',167),
  ('term -> factor termaux','term',2,'p_term','Yaotecatl.py',170),
  ('termaux -> MULTIPLICATION term termaux','termaux',3,'p_termaux','Yaotecatl.py',172),
  ('termaux -> DIVISION term termaux','termaux',3,'p_termaux','Yaotecatl.py',173),
  ('termaux -> empty','termaux',1,'p_termaux','Yaotecatl.py',174),
  ('statement -> assignment','statement',1,'p_statement','Yaotecatl.py',177),
  ('statement -> condition','statement',1,'p_statement','Yaotecatl.py',178),
  ('statement -> vars','statement',1,'p_statement','Yaotecatl.py',179),
  ('statement -> loop','statement',1,'p_statement','Yaotecatl.py',180),
  ('statement -> write','statement',1,'p_statement','Yaotecatl.py',181),
  ('statement -> read','statement',1,'p_statement','Yaotecatl.py',182),
  ('statement -> call','statement',1,'p_statement','Yaotecatl.py',183),
  ('type -> INT','type',1,'p_type','Yaotecatl.py',186),
  ('type -> FLOAT','type',1,'p_type','Yaotecatl.py',187),
  ('type -> CHAR','type',1,'p_type','Yaotecatl.py',188),
  ('type -> BOOL','type',1,'p_type','Yaotecatl.py',189),
  ('type -> STRING','type',1,'p_type','Yaotecatl.py',190),
  ('main -> PRIOMH block','main',2,'p_main','Yaotecatl.py',193),
  ('function -> FUNCTION functionaux ID LFTPAREN functionaux2 RGTPAREN blockreturn','function',7,'p_function','Yaotecatl.py',196),
  ('functionaux -> VOID','functionaux',1,'p_functionaux','Yaotecatl.py',198),
  ('functionaux -> type','functionaux',1,'p_functionaux','Yaotecatl.py',199),
  ('functionaux2 -> parameter','functionaux2',1,'p_functionaux2','Yaotecatl.py',201),
  ('functionaux2 -> empty','functionaux2',1,'p_functionaux2','Yaotecatl.py',202),
  ('vars -> type varsaux2 SEMICOLON','vars',3,'p_vars','Yaotecatl.py',205),
  ('varsaux -> PLUS','varsaux',1,'p_varsaux','Yaotecatl.py',207),
  ('varsaux -> MINUS','varsaux',1,'p_varsaux','Yaotecatl.py',208),
  ('varsaux -> empty','varsaux',1,'p_varsaux','Yaotecatl.py',209),
  ('varsaux2 -> ID EQUAL varsaux constant','varsaux2',4,'p_varsaux2','Yaotecatl.py',211),
  ('varsaux2 -> ID EQUAL varsaux constant COMMA varsaux2','varsaux2',6,'p_varsaux2','Yaotecatl.py',212),
  ('call -> ID LFTPAREN exp RGTPAREN SEMICOLON','call',5,'p_call','Yaotecatl.py',215),
  ('call -> ID LFTPAREN exp COMMA call RGTPAREN SEMICOLON','call',7,'p_call','Yaotecatl.py',216),
  ('read -> READ LFTPAREN ID RGTPAREN SEMICOLON','read',5,'p_read','Yaotecatl.py',219),
  ('empty -> <empty>','empty',0,'p_empty','Yaotecatl.py',222),
]
