
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'LFTBRAC RGTBRAC LFTPAREN RGTPAREN LFTBRACSQR RGTBRACSQR AND DOUBEQUAL NOT OR SEMICOLON EQUAL LESSTHANEQUAL GREATTHANEQUAL GREATTHAN LESSTHAN PLUS MINUS MULTIPLICATION DIVISION ID COMMA FUNCTION INT FALSE STRING READ VOID FLOAT PRIOMH CHAR PRINT WHILE PROGRAM BOOL ELSEIF RETURN ELSE TRUE IFprogram : PROGRAM ID LFTBRAC auxprogram main RGTBRACauxprogram : vars auxprogram \n    | function auxprogram \n    | array : ID LFTBRACSQR exp RGTBRACSQRarrayvalues : LFTBRACSQR arrayvaluesaux RGTBRACSQR arrayvaluesaux : constant  \n    | constant COMMA arrayvaluesaux assignment : assignmentaux EQUAL expression SEMICOLON assignmentaux : ID \n    | arrayblockreturn : LFTBRAC blockneutral RGTBRAC \n    | LFTBRAC blockneutral RETURN exp SEMICOLON RGTBRAC blockneutral : statement blockneutral \n    | vars blockneutral\n    | empty block : LFTBRAC blockneutral RGTBRACcondition : IF conditionaux \n    | IF conditionaux ELSE block conditionaux : LFTPAREN expression RGTPAREN block conditionaux2 conditionaux2 : ELSEIF conditionaux \n    | empty constant : ID \n    | array \n    | cteN\n    | cteS\n    | TRUE \n    | FALSE\n    | call2 cteN : FLOAT addConstant\n    | INT addConstantcteS : STRINGexp : term\n    | term PLUS saveOperation exp\n    | term MINUS saveOperation exp  factoraux : constant\n    | PLUS constant\n    | MINUS constant factor : LFTPAREN addFakeBottom expression RGTPAREN removeFakeBottom factorEnded\n    | factoraux factorEndedexpression : exp \n    | exp expressionaux exp expressionEndedexpressionaux : AND saveOperation\n    | DOUBEQUAL saveOperation\n    | NOT saveOperation\n    | OR saveOperation\n    | LESSTHANEQUAL saveOperation\n    | GREATTHANEQUAL saveOperation\n    | GREATTHAN saveOperation\n    | LESSTHAN saveOperationloop : WHILE LFTPAREN expression RGTPAREN block write : PRINT LFTPAREN constant RGTPAREN SEMICOLON parameter : type ID codeAddParameters\n    | type ID codeAddParameters COMMA parameter \n    | empty  term : factor MULTIPLICATION saveOperation term\n    | factor DIVISION saveOperation term \n    | factor termEnded statement : assignment \n    | condition \n    | loop \n    | write \n    | read \n    | call  type : INT checkType \n    | FLOAT checkType\n    | CHAR checkType\n    | BOOL checkType\n    | STRING checkType  main : PRIOMH codeScope block  function : FUNCTION codeScope functionaux ID codeNameOfFunct LFTPAREN parameter RGTPAREN blockreturn codeScope  functionaux : VOID codeTypeVoid checkType \n    | funcIndicator type  vars : type  varsaux     varsaux : ID codeAddVar EQUAL expression SEMICOLON\n    | ID codeAddVar EQUAL expression COMMA varsaux \n    | ID  codeAddVarArreglo LFTBRACSQR INT RGTBRACSQR  EQUAL arrayvalues SEMICOLON\n    | ID codeAddVarArreglo LFTBRACSQR INT RGTBRACSQR   EQUAL arrayvalues COMMA varsaux call : ID LFTPAREN exp callaux RGTPAREN SEMICOLON  callaux : COMMA exp callaux\n    | empty call2 : ID LFTPAREN exp callaux RGTPAREN  read : READ LFTPAREN readaux RGTPAREN SEMICOLON readaux : ID\n    | array empty : codeScope : checkType : codeAddVar : codeAddVarArreglo : codeAddParameters : codeNameOfFunct : codeTypeVoid : funcIndicator : addConstant : emptysaveOperation : emptyaddFakeBottom : emptyremoveFakeBottom : emptytermEnded : emptyfactorEnded : emptyexpressionEnded : empty'
    
_lr_action_items = {'RGTPAREN':([61,62,63,64,66,67,68,69,71,73,74,75,76,77,78,80,93,94,95,97,99,100,106,107,108,121,122,123,124,125,126,127,129,131,137,138,142,151,157,159,160,165,166,167,168,169,170,171,172,173,180,186,187,188,189,193,200,201,],[-36,-86,-24,-25,-32,-29,-27,-86,-26,-23,-33,-28,-86,-86,-41,-86,-40,-100,-38,-58,-99,-37,-95,-31,-30,152,-55,153,-85,-84,154,155,-86,161,167,-86,-86,-91,179,-81,-5,-57,-56,-86,188,-34,-35,-101,-42,-53,-86,-86,-98,-82,-86,-80,-39,-54,]),'RETURN':([24,43,48,49,50,51,52,53,56,59,81,85,90,91,118,150,156,162,174,176,177,178,181,184,190,192,194,195,199,204,],[-74,-86,-62,-63,-64,-86,-16,-59,-60,-61,-15,-14,-18,-17,-75,-76,-9,-19,-86,-83,-51,-52,-86,-77,202,-79,-20,-22,-78,-21,]),'READ':([24,37,43,48,49,50,51,53,56,59,90,91,118,150,156,162,174,176,177,178,181,184,192,194,195,199,204,],[-74,44,44,-62,-63,-64,44,-59,-60,-61,-18,-17,-75,-76,-9,-19,44,-83,-51,-52,-86,-77,-79,-20,-22,-78,-21,]),'VOID':([5,15,],[-87,29,]),'EQUAL':([23,33,47,54,55,92,160,],[-89,40,-11,86,-10,133,-5,]),'CHAR':([4,5,6,9,15,24,28,37,43,48,49,50,51,53,56,59,80,90,91,118,150,156,162,174,175,176,177,178,181,184,189,191,192,194,195,199,203,204,208,],[7,-87,7,7,-94,-74,7,7,7,-62,-63,-64,7,-59,-60,-61,7,-18,-17,-75,-76,-9,-19,7,-87,-83,-51,-52,-86,-77,7,-71,-79,-20,-22,-78,-12,-21,-13,]),'MULTIPLICATION':([61,62,63,64,66,67,68,69,71,73,75,76,77,93,94,95,100,106,107,108,160,167,186,187,188,200,],[-36,-86,-24,-25,-32,-29,-27,98,-26,-23,-28,-86,-86,-40,-100,-38,-37,-95,-31,-30,-5,-86,-86,-98,-82,-39,]),'WHILE':([24,37,43,48,49,50,51,53,56,59,90,91,118,150,156,162,174,176,177,178,181,184,192,194,195,199,204,],[-74,45,45,-62,-63,-64,45,-59,-60,-61,-18,-17,-75,-76,-9,-19,45,-83,-51,-52,-86,-77,-79,-20,-22,-78,-21,]),'PROGRAM':([0,],[2,]),'PRINT':([24,37,43,48,49,50,51,53,56,59,90,91,118,150,156,162,174,176,177,178,181,184,192,194,195,199,204,],[-74,46,46,-62,-63,-64,46,-59,-60,-61,-18,-17,-75,-76,-9,-19,46,-83,-51,-52,-86,-77,-79,-20,-22,-78,-21,]),'RGTBRACSQR':([60,61,62,63,64,66,67,68,69,71,73,74,75,76,77,93,94,95,97,99,100,106,107,108,130,160,165,166,167,169,170,182,183,186,187,188,200,205,],[92,-36,-86,-24,-25,-32,-29,-27,-86,-26,-23,-33,-28,-86,-86,-40,-100,-38,-58,-99,-37,-95,-31,-30,160,-5,-57,-56,-86,-34,-35,-7,198,-86,-98,-82,-39,-8,]),'TRUE':([40,65,70,72,83,84,86,87,88,89,96,98,101,102,103,104,105,109,110,111,112,113,114,115,116,117,134,135,136,139,140,141,143,144,145,146,147,148,149,158,163,197,202,],[68,68,68,-86,68,68,68,68,68,68,-86,-86,68,-97,68,-86,-86,-86,68,-86,-86,-86,-86,-86,-86,-86,68,-96,68,68,68,-43,-48,-47,-49,-50,-45,-44,-46,68,68,68,68,]),'MINUS':([40,61,62,63,64,66,67,68,69,71,72,73,74,75,76,77,83,86,87,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,134,135,136,139,140,141,143,144,145,146,147,148,149,158,160,165,166,167,186,187,188,200,202,],[65,-36,-86,-24,-25,-32,-29,-27,-86,-26,-86,-23,105,-28,-86,-86,65,65,65,65,65,-40,-100,-38,-86,-58,-86,-99,-37,65,-97,65,-86,-86,-95,-31,-30,-86,65,-86,-86,-86,-86,-86,-86,-86,65,-96,65,65,65,-43,-48,-47,-49,-50,-45,-44,-46,65,-5,-57,-56,-86,-86,-98,-82,-39,65,]),'SEMICOLON':([61,62,63,64,66,67,68,69,71,73,74,75,76,77,78,79,93,94,95,97,99,100,106,107,108,128,142,153,155,160,164,165,166,167,169,170,171,172,179,186,187,188,198,200,206,],[-36,-86,-24,-25,-32,-29,-27,-86,-26,-23,-33,-28,-86,-86,-41,118,-40,-100,-38,-58,-99,-37,-95,-31,-30,156,-86,176,178,-5,184,-57,-56,-86,-34,-35,-101,-42,192,-86,-98,-82,-6,-39,207,]),'GREATTHAN':([61,62,63,64,66,67,68,69,71,73,74,75,76,77,78,93,94,95,97,99,100,106,107,108,160,165,166,167,169,170,186,187,188,200,],[-36,-86,-24,-25,-32,-29,-27,-86,-26,-23,-33,-28,-86,-86,113,-40,-100,-38,-58,-99,-37,-95,-31,-30,-5,-57,-56,-86,-34,-35,-86,-98,-82,-39,]),'LESSTHANEQUAL':([61,62,63,64,66,67,68,69,71,73,74,75,76,77,78,93,94,95,97,99,100,106,107,108,160,165,166,167,169,170,186,187,188,200,],[-36,-86,-24,-25,-32,-29,-27,-86,-26,-23,-33,-28,-86,-86,112,-40,-100,-38,-58,-99,-37,-95,-31,-30,-5,-57,-56,-86,-34,-35,-86,-98,-82,-39,]),'LFTBRACSQR':([23,32,55,73,125,133,],[-90,39,88,88,88,163,]),'PLUS':([40,61,62,63,64,66,67,68,69,71,72,73,74,75,76,77,83,86,87,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,134,135,136,139,140,141,143,144,145,146,147,148,149,158,160,165,166,167,186,187,188,200,202,],[70,-36,-86,-24,-25,-32,-29,-27,-86,-26,-86,-23,104,-28,-86,-86,70,70,70,70,70,-40,-100,-38,-86,-58,-86,-99,-37,70,-97,70,-86,-86,-95,-31,-30,-86,70,-86,-86,-86,-86,-86,-86,-86,70,-96,70,70,70,-43,-48,-47,-49,-50,-45,-44,-46,70,-5,-57,-56,-86,-86,-98,-82,-39,70,]),'COMMA':([61,62,63,64,66,67,68,69,71,73,74,75,76,77,78,79,93,94,95,97,99,100,106,107,108,129,138,142,151,160,164,165,166,167,169,170,171,172,173,180,182,186,187,188,198,200,],[-36,-86,-24,-25,-32,-29,-27,-86,-26,-23,-33,-28,-86,-86,-41,119,-40,-100,-38,-58,-99,-37,-95,-31,-30,158,158,-86,-91,-5,185,-57,-56,-86,-34,-35,-101,-42,189,158,197,-86,-98,-82,-6,-39,]),'$end':([1,31,],[0,-1,]),'FUNCTION':([4,6,9,24,118,150,175,184,191,199,203,208,],[5,5,5,-74,-75,-76,-87,-77,-71,-78,-12,-13,]),'DIVISION':([61,62,63,64,66,67,68,69,71,73,75,76,77,93,94,95,100,106,107,108,160,167,186,187,188,200,],[-36,-86,-24,-25,-32,-29,-27,96,-26,-23,-28,-86,-86,-40,-100,-38,-37,-95,-31,-30,-5,-86,-86,-98,-82,-39,]),'STRING':([4,5,6,9,15,24,28,37,40,43,48,49,50,51,53,56,59,65,70,72,80,83,84,86,87,88,89,90,91,96,98,101,102,103,104,105,109,110,111,112,113,114,115,116,117,118,134,135,136,139,140,141,143,144,145,146,147,148,149,150,156,158,162,163,174,175,176,177,178,181,184,189,191,192,194,195,197,199,202,203,204,208,],[10,-87,10,10,-94,-74,10,10,66,10,-62,-63,-64,10,-59,-60,-61,66,66,-86,10,66,66,66,66,66,66,-18,-17,-86,-86,66,-97,66,-86,-86,-86,66,-86,-86,-86,-86,-86,-86,-86,-75,66,-96,66,66,66,-43,-48,-47,-49,-50,-45,-44,-46,-76,-9,66,-19,66,10,-87,-83,-51,-52,-86,-77,10,-71,-79,-20,-22,66,-78,66,-12,-21,-13,]),'RGTBRAC':([19,24,37,38,43,48,49,50,51,52,53,56,58,59,81,85,90,91,118,150,156,162,174,176,177,178,181,184,190,192,194,195,199,204,207,],[31,-74,-86,-70,-86,-62,-63,-64,-86,-16,-59,-60,91,-61,-15,-14,-18,-17,-75,-76,-9,-19,-86,-83,-51,-52,-86,-77,203,-79,-20,-22,-78,-21,208,]),'LFTPAREN':([34,40,41,44,45,46,55,57,72,73,83,86,87,88,89,96,98,101,102,103,104,105,109,110,111,112,113,114,115,116,117,134,135,136,139,140,141,143,144,145,146,147,148,149,158,196,202,],[-92,72,80,82,83,84,87,89,-86,103,72,72,72,72,72,-86,-86,72,-97,72,-86,-86,-86,72,-86,-86,-86,-86,-86,-86,-86,72,-96,72,72,72,-43,-48,-47,-49,-50,-45,-44,-46,72,89,72,]),'ELSE':([90,91,181,194,195,204,],[132,-17,-86,-20,-22,-21,]),'ELSEIF':([91,181,],[-17,196,]),'GREATTHANEQUAL':([61,62,63,64,66,67,68,69,71,73,74,75,76,77,78,93,94,95,97,99,100,106,107,108,160,165,166,167,169,170,186,187,188,200,],[-36,-86,-24,-25,-32,-29,-27,-86,-26,-23,-33,-28,-86,-86,111,-40,-100,-38,-58,-99,-37,-95,-31,-30,-5,-57,-56,-86,-34,-35,-86,-98,-82,-39,]),'DOUBEQUAL':([61,62,63,64,66,67,68,69,71,73,74,75,76,77,78,93,94,95,97,99,100,106,107,108,160,165,166,167,169,170,186,187,188,200,],[-36,-86,-24,-25,-32,-29,-27,-86,-26,-23,-33,-28,-86,-86,116,-40,-100,-38,-58,-99,-37,-95,-31,-30,-5,-57,-56,-86,-34,-35,-86,-98,-82,-39,]),'ID':([2,7,10,11,12,13,14,17,21,22,24,25,26,27,29,35,36,37,40,42,43,48,49,50,51,53,56,59,65,70,72,82,83,84,86,87,88,89,90,91,96,98,101,102,103,104,105,109,110,111,112,113,114,115,116,117,118,119,120,134,135,136,139,140,141,143,144,145,146,147,148,149,150,156,158,162,163,174,176,177,178,181,184,185,192,194,195,197,199,202,204,],[3,-88,-88,-88,23,-88,-88,-67,-69,-65,-74,-66,-68,34,-93,-73,-88,55,73,-72,55,-62,-63,-64,55,-59,-60,-61,73,73,-86,125,73,73,73,73,73,73,-18,-17,-86,-86,73,-97,73,-86,-86,-86,73,-86,-86,-86,-86,-86,-86,-86,-75,23,151,73,-96,73,73,73,-43,-48,-47,-49,-50,-45,-44,-46,-76,-9,73,-19,73,55,-83,-51,-52,-86,-77,23,-79,-20,-22,73,-78,73,-21,]),'IF':([24,37,43,48,49,50,51,53,56,59,90,91,118,150,156,162,174,176,177,178,181,184,192,194,195,199,204,],[-74,57,57,-62,-63,-64,57,-59,-60,-61,-18,-17,-75,-76,-9,-19,57,-83,-51,-52,-86,-77,-79,-20,-22,-78,-21,]),'AND':([61,62,63,64,66,67,68,69,71,73,74,75,76,77,78,93,94,95,97,99,100,106,107,108,160,165,166,167,169,170,186,187,188,200,],[-36,-86,-24,-25,-32,-29,-27,-86,-26,-23,-33,-28,-86,-86,109,-40,-100,-38,-58,-99,-37,-95,-31,-30,-5,-57,-56,-86,-34,-35,-86,-98,-82,-39,]),'FALSE':([40,65,70,72,83,84,86,87,88,89,96,98,101,102,103,104,105,109,110,111,112,113,114,115,116,117,134,135,136,139,140,141,143,144,145,146,147,148,149,158,163,197,202,],[75,75,75,-86,75,75,75,75,75,75,-86,-86,75,-97,75,-86,-86,-86,75,-86,-86,-86,-86,-86,-86,-86,75,-96,75,75,75,-43,-48,-47,-49,-50,-45,-44,-46,75,75,75,75,]),'LFTBRAC':([3,18,30,132,152,154,161,],[4,-87,37,37,174,37,37,]),'INT':([4,5,6,9,15,24,28,37,39,40,43,48,49,50,51,53,56,59,65,70,72,80,83,84,86,87,88,89,90,91,96,98,101,102,103,104,105,109,110,111,112,113,114,115,116,117,118,134,135,136,139,140,141,143,144,145,146,147,148,149,150,156,158,162,163,174,175,176,177,178,181,184,189,191,192,194,195,197,199,202,203,204,208,],[11,-87,11,11,-94,-74,11,11,60,76,11,-62,-63,-64,11,-59,-60,-61,76,76,-86,11,76,76,76,76,76,76,-18,-17,-86,-86,76,-97,76,-86,-86,-86,76,-86,-86,-86,-86,-86,-86,-86,-75,76,-96,76,76,76,-43,-48,-47,-49,-50,-45,-44,-46,-76,-9,76,-19,76,11,-87,-83,-51,-52,-86,-77,11,-71,-79,-20,-22,76,-78,76,-12,-21,-13,]),'FLOAT':([4,5,6,9,15,24,28,37,40,43,48,49,50,51,53,56,59,65,70,72,80,83,84,86,87,88,89,90,91,96,98,101,102,103,104,105,109,110,111,112,113,114,115,116,117,118,134,135,136,139,140,141,143,144,145,146,147,148,149,150,156,158,162,163,174,175,176,177,178,181,184,189,191,192,194,195,197,199,202,203,204,208,],[13,-87,13,13,-94,-74,13,13,77,13,-62,-63,-64,13,-59,-60,-61,77,77,-86,13,77,77,77,77,77,77,-18,-17,-86,-86,77,-97,77,-86,-86,-86,77,-86,-86,-86,-86,-86,-86,-86,-75,77,-96,77,77,77,-43,-48,-47,-49,-50,-45,-44,-46,-76,-9,77,-19,77,13,-87,-83,-51,-52,-86,-77,13,-71,-79,-20,-22,77,-78,77,-12,-21,-13,]),'LESSTHAN':([61,62,63,64,66,67,68,69,71,73,74,75,76,77,78,93,94,95,97,99,100,106,107,108,160,165,166,167,169,170,186,187,188,200,],[-36,-86,-24,-25,-32,-29,-27,-86,-26,-23,-33,-28,-86,-86,114,-40,-100,-38,-58,-99,-37,-95,-31,-30,-5,-57,-56,-86,-34,-35,-86,-98,-82,-39,]),'PRIOMH':([4,6,8,9,16,20,24,118,150,175,184,191,199,203,208,],[-4,-4,18,-4,-2,-3,-74,-75,-76,-87,-77,-71,-78,-12,-13,]),'BOOL':([4,5,6,9,15,24,28,37,43,48,49,50,51,53,56,59,80,90,91,118,150,156,162,174,175,176,177,178,181,184,189,191,192,194,195,199,203,204,208,],[14,-87,14,14,-94,-74,14,14,14,-62,-63,-64,14,-59,-60,-61,14,-18,-17,-75,-76,-9,-19,14,-87,-83,-51,-52,-86,-77,14,-71,-79,-20,-22,-78,-12,-21,-13,]),'NOT':([61,62,63,64,66,67,68,69,71,73,74,75,76,77,78,93,94,95,97,99,100,106,107,108,160,165,166,167,169,170,186,187,188,200,],[-36,-86,-24,-25,-32,-29,-27,-86,-26,-23,-33,-28,-86,-86,115,-40,-100,-38,-58,-99,-37,-95,-31,-30,-5,-57,-56,-86,-34,-35,-86,-98,-82,-39,]),'OR':([61,62,63,64,66,67,68,69,71,73,74,75,76,77,78,93,94,95,97,99,100,106,107,108,160,165,166,167,169,170,186,187,188,200,],[-36,-86,-24,-25,-32,-29,-27,-86,-26,-23,-33,-28,-86,-86,117,-40,-100,-38,-58,-99,-37,-95,-31,-30,-5,-57,-56,-86,-34,-35,-86,-98,-82,-39,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cteS':([40,65,70,83,84,86,87,88,89,101,103,110,134,136,139,140,158,163,197,202,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'constant':([40,65,70,83,84,86,87,88,89,101,103,110,134,136,139,140,158,163,197,202,],[61,95,100,61,127,61,61,61,61,61,61,61,61,61,61,61,61,182,182,61,]),'vars':([4,6,9,37,43,51,174,],[6,6,6,43,43,43,43,]),'expressionaux':([78,],[110,]),'checkType':([7,10,11,13,14,36,],[17,21,22,25,26,42,]),'codeNameOfFunct':([34,],[41,]),'factoraux':([40,83,86,87,88,89,101,103,110,134,136,139,140,158,202,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'codeAddParameters':([151,],[173,]),'array':([37,40,43,51,65,70,82,83,84,86,87,88,89,101,103,110,134,136,139,140,158,163,174,197,202,],[47,63,47,47,63,63,124,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,47,63,63,]),'cteN':([40,65,70,83,84,86,87,88,89,101,103,110,134,136,139,140,158,163,197,202,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'arrayvaluesaux':([163,197,],[183,205,]),'auxprogram':([4,6,9,],[8,16,20,]),'conditionaux2':([181,],[194,]),'call2':([40,65,70,83,84,86,87,88,89,101,103,110,134,136,139,140,158,163,197,202,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'functionaux':([15,],[27,]),'funcIndicator':([15,],[28,]),'write':([37,43,51,174,],[48,48,48,48,]),'program':([0,],[1,]),'call':([37,43,51,174,],[50,50,50,50,]),'statement':([37,43,51,174,],[51,51,51,51,]),'factor':([40,83,86,87,88,89,101,103,110,134,136,139,140,158,202,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'arrayvalues':([133,],[164,]),'main':([8,],[19,]),'type':([4,6,9,28,37,43,51,80,174,189,],[12,12,12,35,12,12,12,120,12,120,]),'codeAddVar':([23,],[33,]),'empty':([37,43,51,62,69,72,76,77,80,96,98,104,105,109,111,112,113,114,115,116,117,129,138,142,167,174,180,181,186,189,],[52,52,52,94,99,102,106,106,122,135,135,135,135,135,135,135,135,135,135,135,135,159,159,171,187,52,159,195,94,122,]),'function':([4,6,9,],[9,9,9,]),'codeTypeVoid':([29,],[36,]),'expressionEnded':([142,],[172,]),'addConstant':([76,77,],[107,108,]),'read':([37,43,51,174,],[49,49,49,49,]),'assignment':([37,43,51,174,],[53,53,53,53,]),'codeAddVarArreglo':([23,],[32,]),'callaux':([129,138,180,],[157,168,193,]),'readaux':([82,],[123,]),'assignmentaux':([37,43,51,174,],[54,54,54,54,]),'termEnded':([69,],[97,]),'factorEnded':([62,186,],[93,200,]),'addFakeBottom':([72,],[101,]),'condition':([37,43,51,174,],[56,56,56,56,]),'codeScope':([5,18,175,],[15,30,191,]),'term':([40,83,86,87,88,89,101,103,110,134,136,139,140,158,202,],[74,74,74,74,74,74,74,74,74,165,166,74,74,74,74,]),'saveOperation':([96,98,104,105,109,111,112,113,114,115,116,117,],[134,136,139,140,141,143,144,145,146,147,148,149,]),'parameter':([80,189,],[121,201,]),'removeFakeBottom':([167,],[186,]),'blockneutral':([37,43,51,174,],[58,81,85,190,]),'blockreturn':([152,],[175,]),'loop':([37,43,51,174,],[59,59,59,59,]),'exp':([40,83,86,87,88,89,101,103,110,139,140,158,202,],[78,78,78,129,130,78,78,138,142,169,170,180,206,]),'conditionaux':([57,196,],[90,204,]),'expression':([40,83,86,89,101,],[79,126,128,131,137,]),'block':([30,132,154,161,],[38,162,177,181,]),'varsaux':([12,119,185,],[24,150,199,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID LFTBRAC auxprogram main RGTBRAC','program',6,'p_program','Yaotecatl.py',48),
  ('auxprogram -> vars auxprogram','auxprogram',2,'p_auxprogram','Yaotecatl.py',70),
  ('auxprogram -> function auxprogram','auxprogram',2,'p_auxprogram','Yaotecatl.py',71),
  ('auxprogram -> <empty>','auxprogram',0,'p_auxprogram','Yaotecatl.py',72),
  ('array -> ID LFTBRACSQR exp RGTBRACSQR','array',4,'p_array','Yaotecatl.py',75),
  ('arrayvalues -> LFTBRACSQR arrayvaluesaux RGTBRACSQR','arrayvalues',3,'p_arrayvalues','Yaotecatl.py',78),
  ('arrayvaluesaux -> constant','arrayvaluesaux',1,'p_arrayvaluesaux','Yaotecatl.py',80),
  ('arrayvaluesaux -> constant COMMA arrayvaluesaux','arrayvaluesaux',3,'p_arrayvaluesaux','Yaotecatl.py',81),
  ('assignment -> assignmentaux EQUAL expression SEMICOLON','assignment',4,'p_assignment','Yaotecatl.py',84),
  ('assignmentaux -> ID','assignmentaux',1,'p_assignmentaux','Yaotecatl.py',86),
  ('assignmentaux -> array','assignmentaux',1,'p_assignmentaux','Yaotecatl.py',87),
  ('blockreturn -> LFTBRAC blockneutral RGTBRAC','blockreturn',3,'p_blockreturn','Yaotecatl.py',90),
  ('blockreturn -> LFTBRAC blockneutral RETURN exp SEMICOLON RGTBRAC','blockreturn',6,'p_blockreturn','Yaotecatl.py',91),
  ('blockneutral -> statement blockneutral','blockneutral',2,'p_blockneutral','Yaotecatl.py',93),
  ('blockneutral -> vars blockneutral','blockneutral',2,'p_blockneutral','Yaotecatl.py',94),
  ('blockneutral -> empty','blockneutral',1,'p_blockneutral','Yaotecatl.py',95),
  ('block -> LFTBRAC blockneutral RGTBRAC','block',3,'p_block','Yaotecatl.py',97),
  ('condition -> IF conditionaux','condition',2,'p_condition','Yaotecatl.py',100),
  ('condition -> IF conditionaux ELSE block','condition',4,'p_condition','Yaotecatl.py',101),
  ('conditionaux -> LFTPAREN expression RGTPAREN block conditionaux2','conditionaux',5,'p_conditionaux','Yaotecatl.py',103),
  ('conditionaux2 -> ELSEIF conditionaux','conditionaux2',2,'p_conditionaux2','Yaotecatl.py',105),
  ('conditionaux2 -> empty','conditionaux2',1,'p_conditionaux2','Yaotecatl.py',106),
  ('constant -> ID','constant',1,'p_constant','Yaotecatl.py',110),
  ('constant -> array','constant',1,'p_constant','Yaotecatl.py',111),
  ('constant -> cteN','constant',1,'p_constant','Yaotecatl.py',112),
  ('constant -> cteS','constant',1,'p_constant','Yaotecatl.py',113),
  ('constant -> TRUE','constant',1,'p_constant','Yaotecatl.py',114),
  ('constant -> FALSE','constant',1,'p_constant','Yaotecatl.py',115),
  ('constant -> call2','constant',1,'p_constant','Yaotecatl.py',116),
  ('cteN -> FLOAT addConstant','cteN',2,'p_cteN','Yaotecatl.py',123),
  ('cteN -> INT addConstant','cteN',2,'p_cteN','Yaotecatl.py',124),
  ('cteS -> STRING','cteS',1,'p_cteS','Yaotecatl.py',129),
  ('exp -> term','exp',1,'p_exp','Yaotecatl.py',133),
  ('exp -> term PLUS saveOperation exp','exp',4,'p_exp','Yaotecatl.py',134),
  ('exp -> term MINUS saveOperation exp','exp',4,'p_exp','Yaotecatl.py',135),
  ('factoraux -> constant','factoraux',1,'p_factoraux','Yaotecatl.py',138),
  ('factoraux -> PLUS constant','factoraux',2,'p_factoraux','Yaotecatl.py',139),
  ('factoraux -> MINUS constant','factoraux',2,'p_factoraux','Yaotecatl.py',140),
  ('factor -> LFTPAREN addFakeBottom expression RGTPAREN removeFakeBottom factorEnded','factor',6,'p_factor','Yaotecatl.py',156),
  ('factor -> factoraux factorEnded','factor',2,'p_factor','Yaotecatl.py',157),
  ('expression -> exp','expression',1,'p_expression','Yaotecatl.py',160),
  ('expression -> exp expressionaux exp expressionEnded','expression',4,'p_expression','Yaotecatl.py',161),
  ('expressionaux -> AND saveOperation','expressionaux',2,'p_expressionaux','Yaotecatl.py',163),
  ('expressionaux -> DOUBEQUAL saveOperation','expressionaux',2,'p_expressionaux','Yaotecatl.py',164),
  ('expressionaux -> NOT saveOperation','expressionaux',2,'p_expressionaux','Yaotecatl.py',165),
  ('expressionaux -> OR saveOperation','expressionaux',2,'p_expressionaux','Yaotecatl.py',166),
  ('expressionaux -> LESSTHANEQUAL saveOperation','expressionaux',2,'p_expressionaux','Yaotecatl.py',167),
  ('expressionaux -> GREATTHANEQUAL saveOperation','expressionaux',2,'p_expressionaux','Yaotecatl.py',168),
  ('expressionaux -> GREATTHAN saveOperation','expressionaux',2,'p_expressionaux','Yaotecatl.py',169),
  ('expressionaux -> LESSTHAN saveOperation','expressionaux',2,'p_expressionaux','Yaotecatl.py',170),
  ('loop -> WHILE LFTPAREN expression RGTPAREN block','loop',5,'p_loop','Yaotecatl.py',173),
  ('write -> PRINT LFTPAREN constant RGTPAREN SEMICOLON','write',5,'p_write','Yaotecatl.py',176),
  ('parameter -> type ID codeAddParameters','parameter',3,'p_parameter','Yaotecatl.py',179),
  ('parameter -> type ID codeAddParameters COMMA parameter','parameter',5,'p_parameter','Yaotecatl.py',180),
  ('parameter -> empty','parameter',1,'p_parameter','Yaotecatl.py',181),
  ('term -> factor MULTIPLICATION saveOperation term','term',4,'p_term','Yaotecatl.py',184),
  ('term -> factor DIVISION saveOperation term','term',4,'p_term','Yaotecatl.py',185),
  ('term -> factor termEnded','term',2,'p_term','Yaotecatl.py',186),
  ('statement -> assignment','statement',1,'p_statement','Yaotecatl.py',191),
  ('statement -> condition','statement',1,'p_statement','Yaotecatl.py',192),
  ('statement -> loop','statement',1,'p_statement','Yaotecatl.py',193),
  ('statement -> write','statement',1,'p_statement','Yaotecatl.py',194),
  ('statement -> read','statement',1,'p_statement','Yaotecatl.py',195),
  ('statement -> call','statement',1,'p_statement','Yaotecatl.py',196),
  ('type -> INT checkType','type',2,'p_type','Yaotecatl.py',199),
  ('type -> FLOAT checkType','type',2,'p_type','Yaotecatl.py',200),
  ('type -> CHAR checkType','type',2,'p_type','Yaotecatl.py',201),
  ('type -> BOOL checkType','type',2,'p_type','Yaotecatl.py',202),
  ('type -> STRING checkType','type',2,'p_type','Yaotecatl.py',203),
  ('main -> PRIOMH codeScope block','main',3,'p_main','Yaotecatl.py',206),
  ('function -> FUNCTION codeScope functionaux ID codeNameOfFunct LFTPAREN parameter RGTPAREN blockreturn codeScope','function',10,'p_function','Yaotecatl.py',210),
  ('functionaux -> VOID codeTypeVoid checkType','functionaux',3,'p_functionaux','Yaotecatl.py',226),
  ('functionaux -> funcIndicator type','functionaux',2,'p_functionaux','Yaotecatl.py',227),
  ('vars -> type varsaux','vars',2,'p_vars','Yaotecatl.py',230),
  ('varsaux -> ID codeAddVar EQUAL expression SEMICOLON','varsaux',5,'p_varsaux','Yaotecatl.py',232),
  ('varsaux -> ID codeAddVar EQUAL expression COMMA varsaux','varsaux',6,'p_varsaux','Yaotecatl.py',233),
  ('varsaux -> ID codeAddVarArreglo LFTBRACSQR INT RGTBRACSQR EQUAL arrayvalues SEMICOLON','varsaux',8,'p_varsaux','Yaotecatl.py',234),
  ('varsaux -> ID codeAddVarArreglo LFTBRACSQR INT RGTBRACSQR EQUAL arrayvalues COMMA varsaux','varsaux',9,'p_varsaux','Yaotecatl.py',235),
  ('call -> ID LFTPAREN exp callaux RGTPAREN SEMICOLON','call',6,'p_call','Yaotecatl.py',239),
  ('callaux -> COMMA exp callaux','callaux',3,'p_callaux','Yaotecatl.py',241),
  ('callaux -> empty','callaux',1,'p_callaux','Yaotecatl.py',242),
  ('call2 -> ID LFTPAREN exp callaux RGTPAREN','call2',5,'p_call2','Yaotecatl.py',245),
  ('read -> READ LFTPAREN readaux RGTPAREN SEMICOLON','read',5,'p_read','Yaotecatl.py',248),
  ('readaux -> ID','readaux',1,'p_readaux','Yaotecatl.py',250),
  ('readaux -> array','readaux',1,'p_readaux','Yaotecatl.py',251),
  ('empty -> <empty>','empty',0,'p_empty','Yaotecatl.py',254),
  ('codeScope -> <empty>','codeScope',0,'p_codeScope','Yaotecatl.py',270),
  ('checkType -> <empty>','checkType',0,'p_checkType','Yaotecatl.py',281),
  ('codeAddVar -> <empty>','codeAddVar',0,'p_codeAddVar','Yaotecatl.py',306),
  ('codeAddVarArreglo -> <empty>','codeAddVarArreglo',0,'p_codeAddVarArreglo','Yaotecatl.py',315),
  ('codeAddParameters -> <empty>','codeAddParameters',0,'p_codeAddParameters','Yaotecatl.py',325),
  ('codeNameOfFunct -> <empty>','codeNameOfFunct',0,'p_codeNameOfFunct','Yaotecatl.py',339),
  ('codeTypeVoid -> <empty>','codeTypeVoid',0,'p_codeTypeVoid','Yaotecatl.py',347),
  ('funcIndicator -> <empty>','funcIndicator',0,'p_funcIndicator','Yaotecatl.py',354),
  ('addConstant -> empty','addConstant',1,'p_addConstant','Yaotecatl.py',372),
  ('saveOperation -> empty','saveOperation',1,'p_saveOperation','Yaotecatl.py',387),
  ('addFakeBottom -> empty','addFakeBottom',1,'p_addFakeBottom','Yaotecatl.py',394),
  ('removeFakeBottom -> empty','removeFakeBottom',1,'p_removeFakeBottom','Yaotecatl.py',401),
  ('termEnded -> empty','termEnded',1,'p_termEnded','Yaotecatl.py',410),
  ('factorEnded -> empty','factorEnded',1,'p_factorEnded','Yaotecatl.py',434),
  ('expressionEnded -> empty','expressionEnded',1,'p_expressionEnded','Yaotecatl.py',460),
]
